{"version":3,"sources":["data/people.ts","components/DropdownItem.tsx","components/Dropdown.tsx","App.tsx","index.tsx"],"names":["peopleFromServer","name","sex","born","died","fatherName","motherName","slug","DropdownItem","React","memo","person","setSelectedPerson","setSearchName","className","onClick","style","cursor","Dropdown","people","searchName","setSelectedPersonSlug","findSelectedPerson","type","placeholder","value","onChange","event","target","id","role","length","map","App","useState","selectedPersonSlug","useMemo","filter","toLowerCase","includes","trim","find","ReactDOM","render","document","getElementById"],"mappings":"uMAEaA,G,MAA6B,CACxC,CACEC,KAAM,oBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZC,KAAM,0BAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZC,KAAM,yBAER,CACEN,KAAM,iBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZC,KAAM,uBAER,CACEN,KAAM,kBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZC,KAAM,wBAER,CACEN,KAAM,sBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZC,KAAM,4BAER,CACEN,KAAM,wBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZC,KAAM,8BAER,CACEN,KAAM,wBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZC,KAAM,8BAER,CACEN,KAAM,kBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZC,KAAM,wBAER,CACEN,KAAM,kBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZC,KAAM,wBAER,CACEN,KAAM,wBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZC,KAAM,8BAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZC,KAAM,yBAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZC,KAAM,yBAER,CACEN,KAAM,2BACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZC,KAAM,iCAER,CACEN,KAAM,uBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZC,KAAM,6BAER,CACEN,KAAM,wBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZC,KAAM,8BAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,yBAER,CACEN,KAAM,0BACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZC,KAAM,gCAER,CACEN,KAAM,oBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZC,KAAM,0BAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZC,KAAM,yBAER,CACEN,KAAM,sBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZC,KAAM,4BAER,CACEN,KAAM,gBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZC,KAAM,sBAER,CACEN,KAAM,2BACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZC,KAAM,iCAER,CACEN,KAAM,iBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZC,KAAM,uBAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZC,KAAM,yBAER,CACEN,KAAM,iBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZC,KAAM,uBAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZC,KAAM,yBAER,CACEN,KAAM,mBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZC,KAAM,yBAER,CACEN,KAAM,kBACNC,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WA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","file":"static/js/main.6fb5ad73.chunk.js","sourcesContent":["import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { FC } from 'react';\nimport { Person } from '../types/Person';\n\ninterface Props {\n  person: Person;\n  setSelectedPerson: (value: string) => void,\n  setSearchName: (value: string) => void,\n}\n\nexport const DropdownItem: FC<Props> = React.memo(({\n  person,\n  setSelectedPerson,\n  setSearchName,\n}) => {\n  const {\n    slug,\n    sex,\n    name,\n  } = person;\n\n  const handleClicker = (value: string) => {\n    setSelectedPerson(value);\n    setSearchName(name);\n  };\n\n  return (\n    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions\n    <div\n      className=\"dropdown-item\"\n      onClick={() => handleClicker(slug)}\n      style={{ cursor: 'pointer' }}\n    >\n      <p className={sex === 'm'\n        ? 'has-text-link'\n        : 'has-text-danger'}\n      >\n        {name}\n      </p>\n    </div>\n  );\n});\n","import React, { FC } from 'react';\nimport { Person } from '../types/Person';\nimport { DropdownItem } from './DropdownItem';\n\ninterface Props {\n  people: Person[];\n  searchName: string,\n  setSearchName: (value: string) => void,\n  setSelectedPersonSlug: (value: string) => void,\n  findSelectedPerson: Person | null,\n}\n\nexport const Dropdown: FC<Props> = React.memo(({\n  people,\n  searchName,\n  setSearchName,\n  setSelectedPersonSlug,\n  findSelectedPerson,\n}) => {\n  return (\n    <div className=\"dropdown is-active\">\n      <div className=\"dropdown-trigger\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a part of the name\"\n          className=\"input\"\n          value={searchName}\n          onChange={(event) => setSearchName(event.target.value)}\n        />\n      </div>\n\n      {searchName && searchName !== findSelectedPerson?.name && (\n        <div className=\"dropdown-menu\" id=\"dropdown-menu\" role=\"menu\">\n          <div className=\"dropdown-content\">\n            {people.length === 0 && 'No matching suggestions'}\n\n            {people.map(person => (\n              <DropdownItem\n                person={person}\n                key={person.slug}\n                setSelectedPerson={setSelectedPersonSlug}\n                setSearchName={setSearchName}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n});\n","import React, { useMemo, useState } from 'react';\nimport './App.scss';\n// import { debounce } from 'lodash';\nimport { peopleFromServer } from './data/people';\nimport { Dropdown } from './components/Dropdown';\n\nexport const App: React.FC = () => {\n  const [searchName, setSearchName] = useState('');\n  const [selectedPersonSlug, setSelectedPersonSlug] = useState('');\n\n  const people = useMemo(() => (\n    peopleFromServer.filter(person => (\n      person.name.toLowerCase().includes(searchName.toLowerCase().trim())\n    ))\n  ), [searchName]);\n\n  const findSelectedPerson = useMemo(() => (\n    peopleFromServer.find(person => (\n      person.slug === selectedPersonSlug\n    )) || null\n  ), [selectedPersonSlug]);\n\n  return (\n    <main className=\"section\">\n      {selectedPersonSlug\n        ? (\n          <h1 className=\"title\">\n            {`${findSelectedPerson?.name} (${findSelectedPerson?.born} - ${findSelectedPerson?.died})`}\n          </h1>\n        ) : (\n          <h1 className=\"title\">\n            No selected person\n          </h1>\n        )}\n\n      <Dropdown\n        people={people}\n        searchName={searchName}\n        setSearchName={(value: string) => setSearchName(value)}\n        setSelectedPersonSlug={setSelectedPersonSlug}\n        findSelectedPerson={findSelectedPerson}\n      />\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}